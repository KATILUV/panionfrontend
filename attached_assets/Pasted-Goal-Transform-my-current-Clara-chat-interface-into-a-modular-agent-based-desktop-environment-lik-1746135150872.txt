Goal:** Transform my current Clara chat interface into a modular agent-based desktop environment like "Manul" or "Manus." I want to create a soft AI operating system called **Panion**, where Clara is just one draggable/resizable window (agent), and more agents can be added later. The goal is to build a flexible foundation that supports launching, closing, and managing multiple agent "apps" from a shared desktop shell — similar to a mini OS.
>
> Please help me do the following in this one conversion:
>
> 1. **Create `Desktop.tsx`**: a full-screen layout that acts as the main shell (gradient background, space for windows, and a bottom taskbar). This becomes the new root view.
>
> 2. **Replace `App.tsx`** to render the `Desktop.tsx` layout instead of just ClaraChat. Clara is no longer the main app — she’s just one windowed agent.
>
> 3. **Create a reusable `Window.tsx` component** using `react-rnd`. It should be draggable, resizable, styled with Tailwind (rounded corners, shadow, soft background), and have a header with a title and close button.
>
> 4. **Move `ClaraChat.tsx` into an `agents/` folder**, and update it to be rendered inside the new `Window` component. Clara becomes a modular agent.
>
> 5. **Set up global agent window state** using Zustand in a file like `state/agentStore.ts`. It should track which agents are open, provide functions like `openAgent(id)` and `closeAgent(id)`, and store the current focused agent for z-index control.
>
> 6. **In `Desktop.tsx`, dynamically render windows** based on the open agents. Use a constant agent registry list with metadata (id, title, icon), and map through that to display each open window.
>
> 7. **Create a `Taskbar.tsx` component** at the bottom of the screen, which shows an icon for each agent in the registry. Clicking the icon should open or focus the agent window.
>
> 8. **Add support for window focus (z-index), minimize, and close**, so each window can be controlled like an app. Optionally allow dragging outside the screen bounds but keep windows partially visible.
>
> 9. **(Optional)** Store open agent state in `localStorage` using Zustand middleware, so open windows persist on page refresh.
>
> 10. **Ensure the codebase is clean and modular**, and follows best practices using TypeScript, Tailwind CSS, Zustand, and React best practices.
>
> This is a full UI-level refactor to take Clara from a chat app into an OS-like agent framework. Keep it aesthetic, smooth, and easily extendable with more agents later (e.g. Memory Map, Goal Planner, Plugin Builder, etc.).